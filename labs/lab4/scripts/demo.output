Grammar

    0 $accept: PROGRAM $end

    1 PROGRAM: OPS

    2 OPS: OP
    3    | OPS OP

    4 OP1: '{' OPS '}'
    5    | EXPR ';'
    6    | IF '(' EXPR ')' OP1 ELSE OP1
    7    | WHILE '(' EXPR ')' OP1
    8    | EXIT ';'

    9 OP2: IF '(' EXPR ')' OP
   10    | IF '(' EXPR ')' OP1 ELSE OP2
   11    | WHILE '(' EXPR ')' OP2

   12 OP: OP1
   13   | OP2

   14 EXPR: EXPR1
   15     | ID '=' EXPR

   16 EXPR1: EXPR2
   17      | EXPR1 EQ EXPR2
   18      | EXPR1 LE EXPR2
   19      | EXPR1 GE EXPR2
   20      | EXPR1 NE EXPR2
   21      | EXPR1 '>' EXPR2
   22      | EXPR1 '<' EXPR2

   23 EXPR2: TERM
   24      | EXPR2 '+' TERM
   25      | EXPR2 '-' TERM

   26 TERM: VAL
   27     | TERM '*' VAL
   28     | TERM '/' VAL

   29 VAL: NUM
   30    | '-' VAL
   31    | '!' VAL
   32    | '(' EXPR ')'
   33    | ID
   34    | ID '(' ARGS ')'

   35 ARGS: %empty
   36     | ARG
   37     | ARGS ',' ARG

   38 ARG: EXPR
   39    | STRING


Terminals, with rules where they appear

$end (0) 0
'!' (33) 31
'(' (40) 6 7 9 10 11 32 34
')' (41) 6 7 9 10 11 32 34
'*' (42) 27
'+' (43) 24
',' (44) 37
'-' (45) 25 30
'/' (47) 28
';' (59) 5 8
'<' (60) 22
'=' (61) 15
'>' (62) 21
'{' (123) 4
'}' (125) 4
error (256)
IF (258) 6 9 10
ELSE (259) 6 10
WHILE (260) 7 11
EXIT (261) 8
EQ (262) 17
LE (263) 18
GE (264) 19
NE (265) 20
STRING (266) 39
NUM (267) 29
ID (268) 15 33 34


Nonterminals, with rules where they appear

$accept (28)
    on left: 0
PROGRAM (29)
    on left: 1, on right: 0
OPS (30)
    on left: 2 3, on right: 1 3 4
OP1 (31)
    on left: 4 5 6 7 8, on right: 6 7 10 12
OP2 (32)
    on left: 9 10 11, on right: 10 11 13
OP (33)
    on left: 12 13, on right: 2 3 9
EXPR (34)
    on left: 14 15, on right: 5 6 7 9 10 11 15 32 38
EXPR1 (35)
    on left: 16 17 18 19 20 21 22, on right: 14 17 18 19 20 21 22
EXPR2 (36)
    on left: 23 24 25, on right: 16 17 18 19 20 21 22 24 25
TERM (37)
    on left: 26 27 28, on right: 23 24 25 27 28
VAL (38)
    on left: 29 30 31 32 33 34, on right: 26 27 28 30 31
ARGS (39)
    on left: 35 36 37, on right: 34 37
ARG (40)
    on left: 38 39, on right: 36 37


State 0

    0 $accept: . PROGRAM $end

    IF     shift, and go to state 1
    WHILE  shift, and go to state 2
    EXIT   shift, and go to state 3
    NUM    shift, and go to state 4
    ID     shift, and go to state 5
    '{'    shift, and go to state 6
    '('    shift, and go to state 7
    '-'    shift, and go to state 8
    '!'    shift, and go to state 9

    PROGRAM  go to state 10
    OPS      go to state 11
    OP1      go to state 12
    OP2      go to state 13
    OP       go to state 14
    EXPR     go to state 15
    EXPR1    go to state 16
    EXPR2    go to state 17
    TERM     go to state 18
    VAL      go to state 19


State 1

    6 OP1: IF . '(' EXPR ')' OP1 ELSE OP1
    9 OP2: IF . '(' EXPR ')' OP
   10    | IF . '(' EXPR ')' OP1 ELSE OP2

    '('  shift, and go to state 20


State 2

    7 OP1: WHILE . '(' EXPR ')' OP1
   11 OP2: WHILE . '(' EXPR ')' OP2

    '('  shift, and go to state 21


State 3

    8 OP1: EXIT . ';'

    ';'  shift, and go to state 22


State 4

   29 VAL: NUM .

    $default  reduce using rule 29 (VAL)


State 5

   15 EXPR: ID . '=' EXPR
   33 VAL: ID .
   34    | ID . '(' ARGS ')'

    '('  shift, and go to state 23
    '='  shift, and go to state 24

    $default  reduce using rule 33 (VAL)


State 6

    4 OP1: '{' . OPS '}'

    IF     shift, and go to state 1
    WHILE  shift, and go to state 2
    EXIT   shift, and go to state 3
    NUM    shift, and go to state 4
    ID     shift, and go to state 5
    '{'    shift, and go to state 6
    '('    shift, and go to state 7
    '-'    shift, and go to state 8
    '!'    shift, and go to state 9

    OPS    go to state 25
    OP1    go to state 12
    OP2    go to state 13
    OP     go to state 14
    EXPR   go to state 15
    EXPR1  go to state 16
    EXPR2  go to state 17
    TERM   go to state 18
    VAL    go to state 19


State 7

   32 VAL: '(' . EXPR ')'

    NUM  shift, and go to state 4
    ID   shift, and go to state 5
    '('  shift, and go to state 7
    '-'  shift, and go to state 8
    '!'  shift, and go to state 9

    EXPR   go to state 26
    EXPR1  go to state 16
    EXPR2  go to state 17
    TERM   go to state 18
    VAL    go to state 19


State 8

   30 VAL: '-' . VAL

    NUM  shift, and go to state 4
    ID   shift, and go to state 27
    '('  shift, and go to state 7
    '-'  shift, and go to state 8
    '!'  shift, and go to state 9

    VAL  go to state 28


State 9

   31 VAL: '!' . VAL

    NUM  shift, and go to state 4
    ID   shift, and go to state 27
    '('  shift, and go to state 7
    '-'  shift, and go to state 8
    '!'  shift, and go to state 9

    VAL  go to state 29


State 10

    0 $accept: PROGRAM . $end

    $end  shift, and go to state 30


State 11

    1 PROGRAM: OPS .
    3 OPS: OPS . OP

    IF     shift, and go to state 1
    WHILE  shift, and go to state 2
    EXIT   shift, and go to state 3
    NUM    shift, and go to state 4
    ID     shift, and go to state 5
    '{'    shift, and go to state 6
    '('    shift, and go to state 7
    '-'    shift, and go to state 8
    '!'    shift, and go to state 9

    $default  reduce using rule 1 (PROGRAM)

    OP1    go to state 12
    OP2    go to state 13
    OP     go to state 31
    EXPR   go to state 15
    EXPR1  go to state 16
    EXPR2  go to state 17
    TERM   go to state 18
    VAL    go to state 19


State 12

   12 OP: OP1 .

    $default  reduce using rule 12 (OP)


State 13

   13 OP: OP2 .

    $default  reduce using rule 13 (OP)


State 14

    2 OPS: OP .

    $default  reduce using rule 2 (OPS)


State 15

    5 OP1: EXPR . ';'

    ';'  shift, and go to state 32


State 16

   14 EXPR: EXPR1 .
   17 EXPR1: EXPR1 . EQ EXPR2
   18      | EXPR1 . LE EXPR2
   19      | EXPR1 . GE EXPR2
   20      | EXPR1 . NE EXPR2
   21      | EXPR1 . '>' EXPR2
   22      | EXPR1 . '<' EXPR2

    EQ   shift, and go to state 33
    LE   shift, and go to state 34
    GE   shift, and go to state 35
    NE   shift, and go to state 36
    '>'  shift, and go to state 37
    '<'  shift, and go to state 38

    $default  reduce using rule 14 (EXPR)


State 17

   16 EXPR1: EXPR2 .
   24 EXPR2: EXPR2 . '+' TERM
   25      | EXPR2 . '-' TERM

    '+'  shift, and go to state 39
    '-'  shift, and go to state 40

    $default  reduce using rule 16 (EXPR1)


State 18

   23 EXPR2: TERM .
   27 TERM: TERM . '*' VAL
   28     | TERM . '/' VAL

    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 23 (EXPR2)


State 19

   26 TERM: VAL .

    $default  reduce using rule 26 (TERM)


State 20

    6 OP1: IF '(' . EXPR ')' OP1 ELSE OP1
    9 OP2: IF '(' . EXPR ')' OP
   10    | IF '(' . EXPR ')' OP1 ELSE OP2

    NUM  shift, and go to state 4
    ID   shift, and go to state 5
    '('  shift, and go to state 7
    '-'  shift, and go to state 8
    '!'  shift, and go to state 9

    EXPR   go to state 43
    EXPR1  go to state 16
    EXPR2  go to state 17
    TERM   go to state 18
    VAL    go to state 19


State 21

    7 OP1: WHILE '(' . EXPR ')' OP1
   11 OP2: WHILE '(' . EXPR ')' OP2

    NUM  shift, and go to state 4
    ID   shift, and go to state 5
    '('  shift, and go to state 7
    '-'  shift, and go to state 8
    '!'  shift, and go to state 9

    EXPR   go to state 44
    EXPR1  go to state 16
    EXPR2  go to state 17
    TERM   go to state 18
    VAL    go to state 19


State 22

    8 OP1: EXIT ';' .

    $default  reduce using rule 8 (OP1)


State 23

   34 VAL: ID '(' . ARGS ')'

    STRING  shift, and go to state 45
    NUM     shift, and go to state 4
    ID      shift, and go to state 5
    '('     shift, and go to state 7
    '-'     shift, and go to state 8
    '!'     shift, and go to state 9

    $default  reduce using rule 35 (ARGS)

    EXPR   go to state 46
    EXPR1  go to state 16
    EXPR2  go to state 17
    TERM   go to state 18
    VAL    go to state 19
    ARGS   go to state 47
    ARG    go to state 48


State 24

   15 EXPR: ID '=' . EXPR

    NUM  shift, and go to state 4
    ID   shift, and go to state 5
    '('  shift, and go to state 7
    '-'  shift, and go to state 8
    '!'  shift, and go to state 9

    EXPR   go to state 49
    EXPR1  go to state 16
    EXPR2  go to state 17
    TERM   go to state 18
    VAL    go to state 19


State 25

    3 OPS: OPS . OP
    4 OP1: '{' OPS . '}'

    IF     shift, and go to state 1
    WHILE  shift, and go to state 2
    EXIT   shift, and go to state 3
    NUM    shift, and go to state 4
    ID     shift, and go to state 5
    '{'    shift, and go to state 6
    '}'    shift, and go to state 50
    '('    shift, and go to state 7
    '-'    shift, and go to state 8
    '!'    shift, and go to state 9

    OP1    go to state 12
    OP2    go to state 13
    OP     go to state 31
    EXPR   go to state 15
    EXPR1  go to state 16
    EXPR2  go to state 17
    TERM   go to state 18
    VAL    go to state 19


State 26

   32 VAL: '(' EXPR . ')'

    ')'  shift, and go to state 51


State 27

   33 VAL: ID .
   34    | ID . '(' ARGS ')'

    '('  shift, and go to state 23

    $default  reduce using rule 33 (VAL)


State 28

   30 VAL: '-' VAL .

    $default  reduce using rule 30 (VAL)


State 29

   31 VAL: '!' VAL .

    $default  reduce using rule 31 (VAL)


State 30

    0 $accept: PROGRAM $end .

    $default  accept


State 31

    3 OPS: OPS OP .

    $default  reduce using rule 3 (OPS)


State 32

    5 OP1: EXPR ';' .

    $default  reduce using rule 5 (OP1)


State 33

   17 EXPR1: EXPR1 EQ . EXPR2

    NUM  shift, and go to state 4
    ID   shift, and go to state 27
    '('  shift, and go to state 7
    '-'  shift, and go to state 8
    '!'  shift, and go to state 9

    EXPR2  go to state 52
    TERM   go to state 18
    VAL    go to state 19


State 34

   18 EXPR1: EXPR1 LE . EXPR2

    NUM  shift, and go to state 4
    ID   shift, and go to state 27
    '('  shift, and go to state 7
    '-'  shift, and go to state 8
    '!'  shift, and go to state 9

    EXPR2  go to state 53
    TERM   go to state 18
    VAL    go to state 19


State 35

   19 EXPR1: EXPR1 GE . EXPR2

    NUM  shift, and go to state 4
    ID   shift, and go to state 27
    '('  shift, and go to state 7
    '-'  shift, and go to state 8
    '!'  shift, and go to state 9

    EXPR2  go to state 54
    TERM   go to state 18
    VAL    go to state 19


State 36

   20 EXPR1: EXPR1 NE . EXPR2

    NUM  shift, and go to state 4
    ID   shift, and go to state 27
    '('  shift, and go to state 7
    '-'  shift, and go to state 8
    '!'  shift, and go to state 9

    EXPR2  go to state 55
    TERM   go to state 18
    VAL    go to state 19


State 37

   21 EXPR1: EXPR1 '>' . EXPR2

    NUM  shift, and go to state 4
    ID   shift, and go to state 27
    '('  shift, and go to state 7
    '-'  shift, and go to state 8
    '!'  shift, and go to state 9

    EXPR2  go to state 56
    TERM   go to state 18
    VAL    go to state 19


State 38

   22 EXPR1: EXPR1 '<' . EXPR2

    NUM  shift, and go to state 4
    ID   shift, and go to state 27
    '('  shift, and go to state 7
    '-'  shift, and go to state 8
    '!'  shift, and go to state 9

    EXPR2  go to state 57
    TERM   go to state 18
    VAL    go to state 19


State 39

   24 EXPR2: EXPR2 '+' . TERM

    NUM  shift, and go to state 4
    ID   shift, and go to state 27
    '('  shift, and go to state 7
    '-'  shift, and go to state 8
    '!'  shift, and go to state 9

    TERM  go to state 58
    VAL   go to state 19


State 40

   25 EXPR2: EXPR2 '-' . TERM

    NUM  shift, and go to state 4
    ID   shift, and go to state 27
    '('  shift, and go to state 7
    '-'  shift, and go to state 8
    '!'  shift, and go to state 9

    TERM  go to state 59
    VAL   go to state 19


State 41

   27 TERM: TERM '*' . VAL

    NUM  shift, and go to state 4
    ID   shift, and go to state 27
    '('  shift, and go to state 7
    '-'  shift, and go to state 8
    '!'  shift, and go to state 9

    VAL  go to state 60


State 42

   28 TERM: TERM '/' . VAL

    NUM  shift, and go to state 4
    ID   shift, and go to state 27
    '('  shift, and go to state 7
    '-'  shift, and go to state 8
    '!'  shift, and go to state 9

    VAL  go to state 61


State 43

    6 OP1: IF '(' EXPR . ')' OP1 ELSE OP1
    9 OP2: IF '(' EXPR . ')' OP
   10    | IF '(' EXPR . ')' OP1 ELSE OP2

    ')'  shift, and go to state 62


State 44

    7 OP1: WHILE '(' EXPR . ')' OP1
   11 OP2: WHILE '(' EXPR . ')' OP2

    ')'  shift, and go to state 63


State 45

   39 ARG: STRING .

    $default  reduce using rule 39 (ARG)


State 46

   38 ARG: EXPR .

    $default  reduce using rule 38 (ARG)


State 47

   34 VAL: ID '(' ARGS . ')'
   37 ARGS: ARGS . ',' ARG

    ')'  shift, and go to state 64
    ','  shift, and go to state 65


State 48

   36 ARGS: ARG .

    $default  reduce using rule 36 (ARGS)


State 49

   15 EXPR: ID '=' EXPR .

    $default  reduce using rule 15 (EXPR)


State 50

    4 OP1: '{' OPS '}' .

    $default  reduce using rule 4 (OP1)


State 51

   32 VAL: '(' EXPR ')' .

    $default  reduce using rule 32 (VAL)


State 52

   17 EXPR1: EXPR1 EQ EXPR2 .
   24 EXPR2: EXPR2 . '+' TERM
   25      | EXPR2 . '-' TERM

    '+'  shift, and go to state 39
    '-'  shift, and go to state 40

    $default  reduce using rule 17 (EXPR1)


State 53

   18 EXPR1: EXPR1 LE EXPR2 .
   24 EXPR2: EXPR2 . '+' TERM
   25      | EXPR2 . '-' TERM

    '+'  shift, and go to state 39
    '-'  shift, and go to state 40

    $default  reduce using rule 18 (EXPR1)


State 54

   19 EXPR1: EXPR1 GE EXPR2 .
   24 EXPR2: EXPR2 . '+' TERM
   25      | EXPR2 . '-' TERM

    '+'  shift, and go to state 39
    '-'  shift, and go to state 40

    $default  reduce using rule 19 (EXPR1)


State 55

   20 EXPR1: EXPR1 NE EXPR2 .
   24 EXPR2: EXPR2 . '+' TERM
   25      | EXPR2 . '-' TERM

    '+'  shift, and go to state 39
    '-'  shift, and go to state 40

    $default  reduce using rule 20 (EXPR1)


State 56

   21 EXPR1: EXPR1 '>' EXPR2 .
   24 EXPR2: EXPR2 . '+' TERM
   25      | EXPR2 . '-' TERM

    '+'  shift, and go to state 39
    '-'  shift, and go to state 40

    $default  reduce using rule 21 (EXPR1)


State 57

   22 EXPR1: EXPR1 '<' EXPR2 .
   24 EXPR2: EXPR2 . '+' TERM
   25      | EXPR2 . '-' TERM

    '+'  shift, and go to state 39
    '-'  shift, and go to state 40

    $default  reduce using rule 22 (EXPR1)


State 58

   24 EXPR2: EXPR2 '+' TERM .
   27 TERM: TERM . '*' VAL
   28     | TERM . '/' VAL

    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 24 (EXPR2)


State 59

   25 EXPR2: EXPR2 '-' TERM .
   27 TERM: TERM . '*' VAL
   28     | TERM . '/' VAL

    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 25 (EXPR2)


State 60

   27 TERM: TERM '*' VAL .

    $default  reduce using rule 27 (TERM)


State 61

   28 TERM: TERM '/' VAL .

    $default  reduce using rule 28 (TERM)


State 62

    6 OP1: IF '(' EXPR ')' . OP1 ELSE OP1
    9 OP2: IF '(' EXPR ')' . OP
   10    | IF '(' EXPR ')' . OP1 ELSE OP2

    IF     shift, and go to state 1
    WHILE  shift, and go to state 2
    EXIT   shift, and go to state 3
    NUM    shift, and go to state 4
    ID     shift, and go to state 5
    '{'    shift, and go to state 6
    '('    shift, and go to state 7
    '-'    shift, and go to state 8
    '!'    shift, and go to state 9

    OP1    go to state 66
    OP2    go to state 13
    OP     go to state 67
    EXPR   go to state 15
    EXPR1  go to state 16
    EXPR2  go to state 17
    TERM   go to state 18
    VAL    go to state 19


State 63

    7 OP1: WHILE '(' EXPR ')' . OP1
   11 OP2: WHILE '(' EXPR ')' . OP2

    IF     shift, and go to state 1
    WHILE  shift, and go to state 2
    EXIT   shift, and go to state 3
    NUM    shift, and go to state 4
    ID     shift, and go to state 5
    '{'    shift, and go to state 6
    '('    shift, and go to state 7
    '-'    shift, and go to state 8
    '!'    shift, and go to state 9

    OP1    go to state 68
    OP2    go to state 69
    EXPR   go to state 15
    EXPR1  go to state 16
    EXPR2  go to state 17
    TERM   go to state 18
    VAL    go to state 19


State 64

   34 VAL: ID '(' ARGS ')' .

    $default  reduce using rule 34 (VAL)


State 65

   37 ARGS: ARGS ',' . ARG

    STRING  shift, and go to state 45
    NUM     shift, and go to state 4
    ID      shift, and go to state 5
    '('     shift, and go to state 7
    '-'     shift, and go to state 8
    '!'     shift, and go to state 9

    EXPR   go to state 46
    EXPR1  go to state 16
    EXPR2  go to state 17
    TERM   go to state 18
    VAL    go to state 19
    ARG    go to state 70


State 66

    6 OP1: IF '(' EXPR ')' OP1 . ELSE OP1
   10 OP2: IF '(' EXPR ')' OP1 . ELSE OP2
   12 OP: OP1 .

    ELSE  shift, and go to state 71

    $default  reduce using rule 12 (OP)


State 67

    9 OP2: IF '(' EXPR ')' OP .

    $default  reduce using rule 9 (OP2)


State 68

    7 OP1: WHILE '(' EXPR ')' OP1 .

    $default  reduce using rule 7 (OP1)


State 69

   11 OP2: WHILE '(' EXPR ')' OP2 .

    $default  reduce using rule 11 (OP2)


State 70

   37 ARGS: ARGS ',' ARG .

    $default  reduce using rule 37 (ARGS)


State 71

    6 OP1: IF '(' EXPR ')' OP1 ELSE . OP1
   10 OP2: IF '(' EXPR ')' OP1 ELSE . OP2

    IF     shift, and go to state 1
    WHILE  shift, and go to state 2
    EXIT   shift, and go to state 3
    NUM    shift, and go to state 4
    ID     shift, and go to state 5
    '{'    shift, and go to state 6
    '('    shift, and go to state 7
    '-'    shift, and go to state 8
    '!'    shift, and go to state 9

    OP1    go to state 72
    OP2    go to state 73
    EXPR   go to state 15
    EXPR1  go to state 16
    EXPR2  go to state 17
    TERM   go to state 18
    VAL    go to state 19


State 72

    6 OP1: IF '(' EXPR ')' OP1 ELSE OP1 .

    $default  reduce using rule 6 (OP1)


State 73

   10 OP2: IF '(' EXPR ')' OP1 ELSE OP2 .

    $default  reduce using rule 10 (OP2)
